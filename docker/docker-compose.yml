version: '3'
services:
  web-build:
    build: ./web-build
    volumes:
      - './../:/core'
      - './dist:/dist'
    environment:
      REACT_APP_BASE_URL: /api
      REACT_APP_WS_BASE_URL: /notification
      REACT_APP_SETTINGS: /api?action=sql&query=MTGetSysSettings&js=true

  gate-build:
    build: ./gate-build
    volumes:
      - './dist:/dist'
      - './../:/core'
    environment:
      GATE_NODE_NAME: gate

  gate:
    build: ./gate
    depends_on:
      - postgres
    volumes:
      - './dist/ungate:/opt/work_gate/ungate'
      - './gate/config:/opt/work_gate/configs'
    environment:
      LOGGER_CONF: /opt/work_gate/configs/logger.json
      GATE_CLUSTER_NUM: 4
      PROPERTY_DIR: /opt/work_gate/configs
      GATE_UPLOAD_DIR: /opt/work_gate/tmp
      NEDB_TEMP_DB: /opt/work_gate/tmp/db
      NEDB_MULTI_HOST: 'unix:///opt/work_gate/nedb.sock'
      GATE_NODE_NAME: gate
    links:
      - postgres

  liquibase:
    build: ./liquibase
    depends_on:
      - postgres
    volumes:
      - '../:/core'
      - './liquibase/scripts:/scripts'
    environment:
      WAIT_HOSTS: postgres:5432
      POSTGRES_PASSWORD: s_su
      POSTGRES_USER: s_su
      POSTGRES_URL_CORE: jdbc:postgresql://postgres:5432/core
      POSTGRES_URL_AUTH: jdbc:postgresql://postgres:5432/core_auth
    links:
      - postgres

  postgres:
    build: ./postgres
    ports:
      - "9021:5432"
    volumes:
      - "./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d"
      - "./dist/data-pg:/var/lib/postgresql/data"
    environment:
      POSTGRES_PASSWORD: s_su
      POSTGRES_USER: s_su
      POSTGRES_DB: s_su
      POSTGRES_CORE_DB: core
      PGDATA: /var/lib/postgresql/data/pgdata

  server:
    build: ./server
    depends_on:
      - gate
    volumes:
      - './dist:/dist'
      - './dist/front:/web'
    ports:
      - '9020:80'
    links:
      - gate
